/* src/features/chartsPage/charts/ui/TabContent/TabContent.module.css */

.tabContent {
    display: flex;
    flex-direction: column;
    gap: 16px;
    height: 100%;
    position: relative;
}

/* ========== ФИЛЬТР КОНТЕКСТОВ ========== */

.contextFilter {
    background: #fafafa;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    flex-shrink: 0;
}

.filterToggle {
    width: 100%;
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 16px;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: background 0.2s ease;
    text-align: left;
}

.filterToggle:hover {
    background: #f0f0f0;
}

.filterArrow {
    font-size: 12px;
    color: #666;
    transition: transform 0.2s ease;
}

.filterTitle {
    font-size: 14px;
    font-weight: 500;
    color: #333;
}

.filterContent {
    border-top: 1px solid #e0e0e0;
    padding: 12px 16px;
}

.filterActions {
    display: flex;
    gap: 8px;
    margin-bottom: 12px;
}

.filterToggleAll {
    padding: 6px 12px;
    border: 1px solid #d0d0d0;
    border-radius: 4px;
    background: #ffffff;
    color: #333;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.filterToggleAll:hover {
    background: #f5f5f5;
    border-color: #1976d2;
    color: #1976d2;
}

.contextList {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

/* ========== КОНТЕКСТЫ ========== */

.contextSections {
    display: flex;
    flex-direction: column;
    gap: 24px;
    flex: 1;
    overflow-y: auto;
    padding-bottom: 24px;
}

/*  КРИТИЧНО: НЕ unmount, а display: none */
.contextWrapper {
    /* Никаких transition для display - мгновенное переключение */
}

/* ========== ПУСТОЕ СОСТОЯНИЕ (OVERLAY) ========== */

.emptyState {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 48px 24px;
    text-align: center;
    color: #999;
}

.emptyStateOverlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 48px 24px;
    text-align: center;
    color: #999;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    z-index: 10;
}

.emptyState p,
.emptyStateOverlay p {
    margin: 0;
    font-size: 14px;
}

.hint {
    font-size: 12px;
    color: #bbb;
}

/* ========== АДАПТИВНОСТЬ ========== */

@media (max-width: 768px) {
    .tabContent {
        gap: 12px;
    }

    .filterToggle {
        padding: 10px 12px;
    }

    .filterTitle {
        font-size: 13px;
    }

    .contextSections {
        gap: 16px;
    }
}

/* ========== SYNC BUTTON CONTAINER ========== */
.syncButtonContainer {
    /* Базовые стили - кнопка в потоке */
    transition: all 0.3s ease;

}

.syncButtonSticky {
    /* Липкое позиционирование когда активна */
    position: sticky;
    /* Читаем высоту топбара из CSS переменной + отступ 16px */
    top: calc(var(--topbar-height, 49px));
    z-index: 100;

    /* Визуальные эффекты для липкого состояния */


    /* Анимация появления тени при "прилипании" */
    animation: stickyAppear 0.3s ease;
}

@keyframes stickyAppear {
    from {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    }
    to {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08), 0 2px 6px rgba(0, 0, 0, 0.04);
    }
}

/* Опциональный эффект "подсветки" границы */
.syncButtonSticky::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    border-radius: 8px 8px 0 0;
    opacity: 0.6;
}

